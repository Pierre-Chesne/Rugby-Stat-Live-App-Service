name: First Build Deploy Web App
on:
  workflow_dispatch

env:
  # Image & ACR  
  ACR_NAME: "pierrcacr"
  IMAGE_NAME: "stats-rugby-app-service"
  IMAGE_VERSION: "0.1.6"
  RG_ACR_Name: "RG-BE-ACR"

  # Web App
  LOCATION: "westeurope"
  RG_NAME: "RG-Stats-Rugby-App-Service"
  APP_PLAN_NAME: "app-plan-Stats-Rugby-App-Service"
  APP_PLAN_SKU: "P1v2"
  SITE_NAME: "stats-rugby-as"  
  ACR_REGISTRY_NAME: "pierrcacr.azurecr.io"
  ACR_REGISTRY_USER: "pierrcacr"  
  ACR_REGISTRY_IMAGE_NAME: "pierrcacr.azurecr.io/stats-rugby-app-service"
  ACR_IMAGE_VERSION: "latest"
  WEBHOOK: "rugbystatwebapp"

jobs:

  Build_Image:
    runs-on: ubuntu-20.04

    steps:

    - name: Recuperation du repos 
      uses: actions/checkout@v2  

    - name: Login Azure
      uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Replace
      uses: jacobtomlinson/gha-find-replace@master
      with:
        find: "localhost:5500"
        replace: "${{ env.SITE_NAME }}.azurewebsites.net"

    - name: Connexion à Azure Container Registry
      uses: docker/login-action@v1.10.0
      with:
        registry: ${{ env.ACR_NAME }}.azurecr.io
        username: ${{ env.ACR_NAME }}
        password: "${{ secrets.ACR_KEY }}"

    - name: Extraire les métadonnées docker
      id: meta
      uses: docker/metadata-action@v3.6.2
      with:
        images: ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }} 
        tags: |
         type=semver,pattern={{version}},value=${{ env.IMAGE_VERSION }}

    - name: Construire et pousser image Docker
      uses: docker/build-push-action@v3.1.1
      with:         
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  Deploy-WebApp:
    runs-on: ubuntu-latest
    needs: Build_Image

    steps:
    - name: "Checkout the code"
      uses: actions/checkout@v2

    - name: Login to Azure
      uses: Azure/login@v1
      with:        
        creds: ${{secrets.AZURE_CREDENTIALS}}

    - name: Deploy infra WebApp
      run: |
        az deployment sub create \
          --location ${{ env.LOCATION}} \
          --template-file ./Bicep/main.bicep \
          --parameters 'RgSiteName=${{ env.RG_NAME }}' 'appPlanName=${{ env.APP_PLAN_NAME }}' 'sku=${{ env.APP_PLAN_SKU }}' 'rugbystatsapiName=${{ env.SITE_NAME }}' 'DockerRegistryName=${{ env.ACR_REGISTRY_NAME }}' 'DockerRegistryUser=${{ env.ACR_REGISTRY_USER }}' 'DockerRegistryPWD=${{ secrets.ACR_KEY }}' 'ImageName=${{ env.ACR_REGISTRY_IMAGE_NAME }}' 'ImageVersion=${{ env.ACR_IMAGE_VERSION }}' 'DB_USER=${{ secrets.VALUE_USER }}' 'DB_HOST=${{ secrets.VALUE_HOST }}' 'DB_PASS=${{ secrets.VALUE_PWD }}' 'DB_MANE=${{ secrets.VALUE_DB }}'

    - name: Activation Webhook ACR->WebApp
      run: |
        ci_cd_webhook=`az webapp deployment container config \
          --name ${{ env.SITE_NAME}} \
          --resource-group ${{ env.RG_NAME}} \
          --enable-cd true \
          --query CI_CD_URL \
          --output tsv`
        az acr webhook create \
          --resource-group ${{ env.RG_ACR_Name}} \
          --location ${{ env.LOCATION}} \
          --name ${{ env.WEBHOOK }} \
          --registry ${{ env.ACR_NAME}} \
          --uri $ci_cd_webhook \
          --actions push --output none